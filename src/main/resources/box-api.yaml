openapi: 3.0.0
info:
  title: box_api
  version: 1.0.0
  description: Box API for users
paths:
  /folder:
    get:
      summary: Search for documents in a folder
      tags:
        - Folder
      parameters:
        - name: appUserId
          in: query
          schema:
            type: string
          required: true
          description: app user id
        - name: folderId
          in: query
          schema:
            type: string
          required: true
          description: folder id
        - name: fileName
          in: query
          schema:
            type: string
          required: false
          description: folder id
        - name: offset
          in: query
          schema:
            type: integer
          required: false
          description: offset
        - name: limit
          in: query
          schema:
            type: integer
          required: false
          description: limit
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
          description: File or Folder obtained
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: App User or File/Folder not found
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: File/Folder not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Service error
      description: Get file
    post:
      summary: Create folder
      tags:
        - Folder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderCreationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderCreationResponse'
          description: Successfully created new folder
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Some of the parameters are missing or not valid.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: 'The parent folder could not be found, or the authenticated user does not have access to the parent folder.'
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: The folder is locked or the folder already exists.
  /file:
    get:
      summary: Download file
      tags:
        - File
      parameters:
        - name: appUserId
          in: query
          schema:
            type: string
          required: true
          description: app user id
        - name: fileId
          in: query
          schema:
            type: string
          required: true
          description: file id
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: A binary file
        '202':
          headers:
            Retry-After:
              schema:
                type: integer
              description: Time in seconds after which the file will be available for the client to download.
          content:
            application/json:
              schema:
                type: string
          description: File is not ready to be downloaded.
        '404':
          content:
            application/json:
              schema:
                type: string
          description: File not found
      description: Get file
    post:
      summary: Upload file
      tags:
        - File
      parameters:
        - name: appUserId
          in: query
          schema:
            type: string
          description: app user id
          required: true
        - name: boxFolderId
          in: query
          schema:
            type: string
          description: box folder id
          required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadData'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadFileResponse'
          description: Document ID of uploaded content is returned
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Folder error
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: File exists error
    delete:
      summary: Delete file
      tags:
        - File
      parameters:
        - name: appUserId
          in: query
          schema:
            type: string
          required: true
          description: app user id
        - name: fileId
          in: query
          schema:
            type: string
          required: true
          description: file id
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDeletionResult'
          description: File deleted successfully.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: App User or File/Folder not found
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: File/Folder not found.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: You cannot delete this file as it is already attached to a Case or is Verified.
  /file-view:
    get:
      summary: View file
      tags:
        - File
      parameters:
        - name: appUserId
          in: query
          schema:
            type: string
          required: true
          description: app user id
        - name: fileId
          in: query
          schema:
            type: string
          required: true
          description: file id
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentViewResponse'
          description: view metadata
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Some of the parameters are missing or not valid
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: File not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: document view error
  /file-link:
    get:
      summary: Link File
      tags:
        - File
      parameters:
        - name: appUserId
          in: query
          schema:
            type: string
          required: true
          description: app user id
        - name: fileId
          in: query
          schema:
            type: string
          required: true
          description: file id
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentLinkResponse'
          description: view metadata
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: Some of the parameters are missing or not valid
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: File not found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceError'
          description: document link error
components:
  schemas:
    SearchResult:
      type: object
      properties:
        complete:
          enum:
            - true
            - false
          type: string
        fileData:
          type: array
          items:
            $ref: '#/components/schemas/FileInfo'
    FolderCreationRequest:
      type: object
      properties:
        firstName:
          description: First name
          type: string
        lastName:
          description: Last name
          type: string
        mpiid:
          type: string
        logonuserid:
          type: string
      required:
        - firstName
        - lastName
        - mpiid
    FolderCreationResponse:
      type: object
      properties:
        appUserId:
          description: The unique identifier for the user the folder is associated with.
          type: string
        folderId:
          description: The unique identifier that represents the folder.
          type: string
    UploadFileResponse:
      type: object
      properties:
        status:
          description: Status message for operation
          type: string
        fileId:
          description: File ID of uploaded content
          type: string
    ServiceError:
      type: object
      properties:
        code:
          description: Error code
          type: string
        message:
          description: Error description
          type: string
    FileUploadData:
      required:
        - file
      type: object
      properties:
        file:
          format: binary
          type: string
    FileDownloadData:
      type: object
      properties:
        file:
          format: binary
          type: string
    FileInfo:
      type: object
      properties:
        fileId:
          type: string
        fileName:
          type: string
        itemType:
          enum:
            - file
            - folder
          type: string
    DocumentDeletionResult:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    DocumentViewResponse:
      type: object
      properties:
        previewUrl:
          type: string
        shortPreviewUrl:
          type: string
    DocumentLinkResponse:
      type: object
      properties:
        linkUrl:
          type: string
